// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id String @id @default(uuid())
  username String @unique
  password String
  profileImg String?
  role  Role @default(BUYER)
  ownedProducts Product[] @relation("ProductOwner")
  payments Payment[]
  userAccount SellerAccount?
}

model Product {
  id String @id @default(uuid())
  name String @unique
  fileUrl String
  filePath String
  description String
  price String
  ownerId String
  owner User @relation("ProductOwner",fields: [ownerId],references: [id])
  payment Payment[]
}

model Payment {
  id String @id @default(uuid())
  status PaymentStatus @default(PENDING)
  reference String @unique
  userId String
  user User @relation(fields: [userId],references: [id])
  productId String 
  product Product @relation(fields: [productId],references: [id])
  createdAt DateTime @default(now())
}

model SellerAccount {
  id String @id @default(uuid())
  businessName String? @unique
  bankCode String?
  accountNumber String 
  percentage String? @default("10")
  verified Boolean @default(false)
  sub_account String?
  sellerId String @unique
  user User @relation(fields: [sellerId], references: [id])
}


enum Role {
  ADMIN
  SELLER
  BUYER
}

enum PaymentStatus {
  PENDING
  SUCCESS
  FAILED
}